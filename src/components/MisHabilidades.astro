---
// let images = await import.meta.glob("../../public/img/iconos/*.svg", { as: 'url'});
import wordpress from "/img/iconos/wordpress.svg";
import woocommerce from "/img/iconos/woocommerce.svg";
let nombres_tecnologias = [
  "HTML",
  "CSS",
  "JavaScript",
  "Figma",
  "Astro JS",
  "Tailwind CSS",
  "MySQL",
  "GIT",
];
let images = await import.meta.glob("/public/img/iconos/*_icon.svg", {
  as: "url",
});
let urls = Object.keys(images);
let url_images = urls.map((e) => {
  return e.split("/public").join("");
});
---

<div
  class="container container_mis_habilidades min-h-screen max-h-[2500px] relative grid place-items-center py-28"
>
  <article
    class="w-full h-fit flex items-center flex-col md:gap-14 gap-10 [&>p]:text-dark-light [&>p]:dark:text-light-dark [&>p]:xl:text-base [&>p]:md:text-base [&>p]:text-sm"
  >
    <div class="container_mis_habilidades_texto">
      <h2
        class="titulo 2xl:text-8xl xl:text-7xl lg:text-6xl sm:text-6xl text-4xl font-bold text-center text-dark dark:text-light relative z-20"
      >
        Mis Habilidades
      </h2>
      <p
        class="text-center text-dark-light dark:text-light-dark mt-7"
        style="text-wrap:balance"
      >
        Estas son algunas Herramientas y Tecnologías que he utilizado hasta
        ahora. Recién estoy aprendiendo a usar WordPress y WooCommerce.
      </p>
    </div>
    <div
      class="flex md:flex-row flex-col sm:gap-14 gap-12 [&>*>*>img]:h-20 [&>*>*>img]:w-auto [&>*>*>img]:dark:brightness-0 [&>*>*>img]:dark:invert [&>*>*>img]:justify-self-center [&>*>*>img]:dark:opacity-90"
    >
      <div
        class="grid sm:grid-cols-4 grid-cols-2 md:gap-14 sm:gap-10 gap-y-10 gap-x-8 items-center justify-center"
      >
        {
          url_images.map((image) => (
            <figure class="flex flex-col items-center container_img_habilidades">
              <img src={image} alt="" class="" />
              <figcaption class="dark:text-light-dark text-dark-light text-center mt-4">
                {nombres_tecnologias[url_images.indexOf(image)]}
              </figcaption>
            </figure>
          ))
        }
      </div>
      <span
        aria-hidden="true"
        class="md:w-[0.1px] linea_divisora h-auto border border-dashed dark:border-grey border-dark-light opacity-60"
      ></span>
      <div class="flex md:flex-col md:justify-between justify-center gap-14">
        <figure class="flex flex-col items-center">
          <img src={wordpress} class="" alt="" />
          <figcaption
            class="dark:text-light-dark text-dark-light text-center mt-4"
          >
            WordPress
          </figcaption>
        </figure>
        <figure class="flex flex-col items-center">
          <img src={woocommerce} class="" alt="" />
          <figcaption
            class="dark:text-light-dark text-dark-light text-center mt-4"
          >
            WooCommerce
          </figcaption>
        </figure>
      </div>
    </div>
  </article>
</div>

<script>
  import { animate, inView, stagger, scroll, timeline } from "motion";
  const container_mis_habilidades = document.querySelector(
    ".container_mis_habilidades"
  );
  container_mis_habilidades.style.opacity = 0;
  let titulo_habilidades = document.querySelector(
    ".container_mis_habilidades_texto > h2"
  );
  titulo_habilidades.innerHTML = titulo_habilidades.textContent.replace(
    /\S/g,
    "<span class='inline-block letras_titulo_habilidades'>$&</span>"
  );
  let letras_titulo_habilidades = document.querySelectorAll(
    ".letras_titulo_habilidades"
  );

  const sequence = [
    [
      container_mis_habilidades,
      { opacity: [0, 100] },
      {
        duration: 1.5,
        at: 0.1,
      },
    ],
    [
      "figure",
      {
        clipPath: ["circle(0% at 0 0)", "circle(150% at 0 0)"],
      },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        delay: stagger(0.05),
        at: 0.2,
      },
    ],
    [
      ".linea_divisora",
      {
        clipPath: ["circle(0% at 0 0)", "circle(150% at 0 0)"],
      },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        at: 0.3,
      },
    ],
    [
      Array.from(letras_titulo_habilidades),
      { opacity: [0, 100], transform: ["translateY(50px)", "translateY(0px)"] },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        delay: stagger(0.05),
        at: 0.3,
      },
    ],
    [
      ".container_mis_habilidades_texto > p",
      { opacity: [0, 100] },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        at: 0.3,
      },
    ],
  ];
  const sequence_movil = [
    [
      container_mis_habilidades,
      { opacity: [0, 100] },
      {
        duration: 1.5,
        at: 0.1,
      },
    ],
    [
      "figure",
      {
        opacity:[0, 100],
      },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        at: 0.2,
      },
    ],
    [
      Array.from(letras_titulo_habilidades),
      { opacity: [0, 100]},
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        at: 0.3,
      },
    ],
    [
      ".container_mis_habilidades_texto > p",
      { opacity: [0, 100] },
      {
        duration: 1.3,
        easing: [0.83, 0, 0.17, 1],
        at: 0.3,
      },
    ],
  ];

  if (window.innerWidth >= 768) {
    inView(
      container_mis_habilidades,
      () => {
        timeline(sequence);
      },
      { margin: "0% 0% -15% 0%" }
    );
  } else {
    inView(
      container_mis_habilidades,
      () => {
        timeline(sequence_movil);
      },
      { margin: "0% 0% -15% 0%" }
    );
  }
</script>
